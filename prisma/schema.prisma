// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations - Her kullanıcının kendi verileri
  customers Customer[]
  products  Product[]
  shipments Shipment[]

  @@map("users")
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  address   String?
  city      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // User relation
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  shipments Shipment[]

  @@map("customers")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  category    String
  price       Float
  image       String?
  features    String[] @default([])
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // User relation
  userId        String
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  stock         Stock?
  shipmentItems ShipmentItem[]

  @@map("products")
}

model Shipment {
  id           String   @id @default(cuid())
  customerId   String
  address      String
  city         String
  status       String   @default("PENDING")
  totalAmount  Float
  deliveryDate DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // User relation
  userId       String
  user         User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  customer Customer      @relation(fields: [customerId], references: [id])
  items    ShipmentItem[]

  @@map("shipments")
}

model Stock {
  id          String @id @default(cuid())
  productId   String @unique
  quantity    Int    @default(0)
  minQuantity Int    @default(5)
  maxQuantity Int    @default(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("stock")
}

model ShipmentItem {
  id         String @id @default(cuid())
  quantity   Int    @default(1)
  unitPrice  Float
  
  // Relations
  shipmentId String
  shipment   Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
  productId  String
  product    Product  @relation(fields: [productId], references: [id])

  @@map("shipment_items")
}